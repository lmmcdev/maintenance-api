name: maintenance-api CI/CD

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.'
  NODE_VERSION: '20'
  APP_NAME: 'maintenance-api'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Install deps
        run: npm ci

      - name: Build
        run: npm run build --if-present

      - name: Test
        run: npm test --if-present

      - name: Generate build info
        run: |
          COMMIT_SHA=$(git rev-parse HEAD)
          SHORT_SHA=$(git rev-parse --short HEAD)
          COMMIT_MESSAGE=$(git log -1 --pretty=%s | sed 's/"/\\"/g')
          COMMIT_AUTHOR=$(git log -1 --pretty=%an | sed 's/"/\\"/g')
          BRANCH="${GITHUB_REF_NAME}"
          BUILD_TIME=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          REPO="${GITHUB_REPOSITORY}"
          RUN_ID="${GITHUB_RUN_ID}"
          RUN_NUMBER="${GITHUB_RUN_NUMBER}"
          VERSION=$(node -e "console.log(require('./package.json').version || '')")
          cat > build-info.json <<EOF
          {
            "appName": "${{ env.APP_NAME }}",
            "version": "$VERSION",
            "commit": {
              "sha": "$COMMIT_SHA",
              "short": "$SHORT_SHA",
              "message": "$COMMIT_MESSAGE",
              "author": "$COMMIT_AUTHOR",
              "branch": "$BRANCH"
            },
            "ci": {
              "repo": "$REPO",
              "runId": "$RUN_ID",
              "runNumber": "$RUN_NUMBER",
              "workflow": "${{ github.workflow }}"
            },
            "builtAt": "$BUILD_TIME",
            "env": "production"
          }
          EOF

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: ./

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: node-app
          path: .

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_D554AEE56B394467875C05C41AE0F106 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_4D1E6F99E61E482C848AD6CFD8570F2D }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_916EBE09C4AD41F685061906E2E675D5 }}

      - name: Deploy to Azure Functions
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ env.APP_NAME }}
          slot-name: 'Production'
          package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
          respect-funcignore: true
          scm-do-build-during-deployment: false
